// You can check out a full git handbook here: https://docs.github.com/en/get-started/using-git/about-git

// Premade templates for .gitignore files
https://github.com/github/gitignore

// Here you can learn the branching https://learngitbranching.js.org/

I summarized basics here.

When we are in a local bash and in particular project directory, here is what we can do.

// git phases are :
WORKING DIRECTORY - STAGING AREA - LOCAL REPOSITORY - REMOTE REPOSITORY

// ---------------------------------------------
// 1 - To Initialize a git
git init

// 2 - To include all files (those listed in .gitignore are omited
git add .

// 3 - Create a LOCAL STAGE
git commit -m "Initial Commit"

// 4 - Pushing commits to a remote repository
// Push the git to the origin main (remote)
// Dont forget to commit changes first :$ git commit -m "Your commit stage description"
git remote add origin https://github.com/DeLucasso/NAME_OF_GIT.git
git branch -m main
git push -u origin main
// ---------------------------------------------

// To reset to some specifid commit
// Use git log to find a has of commit that you'd like to reset to.
git reset --hard [hash]

// To ignore (omit) files from the git repository to be uploaded to GitHub
// First create a hidden file gitignore
touch .gitignore

//Add files to the .gitignore file 
open .gitignore

// To remove all files from git stage
git -rm --cashed -r .

// To remove one file from git stage
git -rm --cashed filename.txt

// To get a status of git
git status

// To get a log of the git stage
git log

// Comment in .gitignore
#This is a comment line in .gitignore

// Use wildcards in .gitignore
*.txt

// Article to understand git branching
// https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging

// Making a new branch
git branch -m new_branch_name

// Check branch list
git branch

// Switch a branch ( Check Out ), then you can see '*' at 
git checkout branch_name

// Renaming a local branch
git -m old_name new_name

// Deleting a local branch
// First you have to checkout a branch that you want to delete (if its' marked as *)
// Then you can delete a branch
git -d branch_name_to_delete

// Deleting a branch REMOTELY
git push origin --delete branch_name

// !! Everytime when you want to commit changes to the git, you have to do every time this:
git add . //(to include all files to git)
git commit -m "Your commit comment of the changes you've made"

// Merging a branch to main, don't forget to add all files and commit changes first!
First if you are happy with the changes in branch, you can merge the branch with main
git checkout main
git merge name_of_branch_that_you_want_to_merge // git merge branch1
// The vim editor will open, so you can add comments to merge. Then to save write " :q! "
